services:
    etl:
        deploy:
            replicas: 0

    db:
        image: postgres:14
        restart: always
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - 5432:5432
        volumes:
            - ${PWD}/hasura/migrations/default/1653144961417_init:/docker-entrypoint-initdb.d
            - db:/var/lib/postgresql/data
        networks:
            - backend

    hasura:
        image: hasura/graphql-engine:v2.6.2.cli-migrations-v3
        restart: always
        volumes:
            - ./hasura/migrations:/hasura-migrations
            - ./hasura/metadata:/hasura-metadata
        ports:
            - 8080:8080
        networks:
            - backend
        environment:
            HASURA_GRAPHQL_DATABASE_URL: ${PG_DATABASE_URL}
            HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
            HASURA_GRAPHQL_DEV_MODE: "true"
            HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
            HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup, http-log, webhook-log, websocket-log, query-log"
            PG_DATABASE_URL: ${PG_DATABASE_URL}
            HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
        depends_on:
            - db

volumes:
    db:
        driver: local
